<?xml version="1.0" encoding="UTF-8"?>
<!-- JBoss, Home of Professional Open Source Copyright Red Hat, Inc., and 
	individual contributors Licensed under the Apache License, Version 2.0 (the 
	"License"); you may not use this file except in compliance with the License. 
	You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.jboss.aerogear</groupId>
		<artifactId>aerogear-parent</artifactId>
		<!-- NOTE: if updated for version of UPS dependencies, please update the 
			'aerogear.bom.version' as well -->
		<version>1.1.2</version>
	</parent>

	<groupId>org.jboss.aerogear.unifiedpush</groupId>
	<artifactId>unifiedpush-parent</artifactId>
	<version>2.2.3.Final</version>
	<packaging>pom</packaging>

	<name>AeroBase Server</name>
	<url>http://aerogear.org/push</url>

	<scm>
		<connection>scm:git:git://github.com/aerogear/aerogear-unifiedpush-server.git</connection>
		<developerConnection>scm:git:git@github.com:aerogear/aerogear-unifiedpush-server.git</developerConnection>
		<url>https://github.com/aerogear/aerogear-unifiedpush-server</url>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<system>jira</system>
		<url>https://issues.jboss.org/browse/AGPUSH</url>
	</issueManagement>

	<ciManagement>
		<system>travis-ci</system>
		<url>https://travis-ci.org/aerogear/aerogear-unifiedpush-server</url>
	</ciManagement>

	<modules>
		<module>common</module>
		<module>model</module>
		<module>migrator</module>
		<module>push-sender</module>
		<module>service</module>
		<module>jaxrs</module>
		<module>dependencies</module>
		<module>servers</module>
	</modules>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.jboss.aerogear</groupId>
				<artifactId>aerogear-crypto</artifactId>
				<version>${aerogear.crypto.version}</version>
			</dependency>

			<!-- We need to redefine few testing dependencies until JDF updates -with-tools 
				BOM -->
			<!-- https://issues.jboss.org/browse/JDF-417 -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- JBoss distributes a complete set of Java EE 8 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-7.0 stack (you can read this as 
				the JBoss stack of the Java EE 8 APIs) -->
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>wildfly-javaee8</artifactId>
				<version>${wildfly.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-8.0</artifactId>
				<version>1.0.1.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- AeroGear Dependencies BOM Imports -->
			<dependency>
				<groupId>org.jboss.aerogear</groupId>
				<artifactId>aerogear-unifiedpush-bom</artifactId>
				<version>${aerogear.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.spec.javax.servlet</groupId>
				<artifactId>jboss-servlet-api_4.0_spec</artifactId>
				<version>1.0.0.Final</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${version.javax.validation}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.3</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.4.6</version>
			</dependency>

			<!-- Override resteasy version -->
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jaxrs</artifactId>
				<version>${resteasy.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>async-http-servlet-3.0</artifactId>
				<version>${resteasy.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>jaxrs-api</artifactId>
				<version>${resteasy.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jackson2-provider</artifactId>
				<version>${resteasy.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-multipart-provider</artifactId>
				<version>${resteasy.version}</version>
			</dependency>

			<!-- Internal dependency managment -->
			<dependency>
				<groupId>org.jboss.aerogear.unifiedpush</groupId>
				<artifactId>unifiedpush-model-jpa</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.aerogear.unifiedpush</groupId>
				<artifactId>unifiedpush-model-api</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.aerogear.unifiedpush</groupId>
				<artifactId>unifiedpush-model-nosql</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.aerogear.unifiedpush</groupId>
				<artifactId>unifiedpush-push-model</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.aerogear.unifiedpush</groupId>
				<artifactId>unifiedpush-push-sender</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.aerogear.unifiedpush</groupId>
				<artifactId>unifiedpush-service</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.aerogear.unifiedpush</groupId>
				<artifactId>unifiedpush-service</artifactId>
				<type>test-jar</type>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.aerogear.unifiedpush</groupId>
				<artifactId>unifiedpush-common</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.5</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${fasterxml.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${fasterxml.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${fasterxml.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-base</artifactId>
				<version>${fasterxml.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${fasterxml.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slfj4.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slfj4.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- keycloak verison policy -->
			<dependency>
				<groupId>org.keycloak</groupId>
				<artifactId>keycloak-dependencies-server-min</artifactId>
				<version>${keycloak.version}</version>
			</dependency>

			<dependency>
				<groupId>org.keycloak</groupId>
				<artifactId>keycloak-core</artifactId>
				<version>${keycloak.version}</version>
			</dependency>

			<dependency>
				<groupId>org.keycloak</groupId>
				<artifactId>keycloak-adapter-core</artifactId>
				<version>${keycloak.version}</version>
			</dependency>

			<dependency>
				<groupId>org.keycloak</groupId>
				<artifactId>keycloak-adapter-spi</artifactId>
				<version>${keycloak.version}</version>
			</dependency>

			<dependency>
				<groupId>org.keycloak</groupId>
				<artifactId>keycloak-spring-security-adapter</artifactId>
				<version>${keycloak.version}</version>
			</dependency>


			<!-- infinispan version policy -->
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-core</artifactId>
				<version>${org.infinispan}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-cachestore-remote</artifactId>
				<version>${org.infinispan}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${springframework.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${springframework.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${springframework.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-commons</artifactId>
				<version>${spring-data.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring-data.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>

			<dependency>
				<groupId>org.reactivestreams</groupId>
				<artifactId>reactive-streams</artifactId>
				<version>1.0.0</version>
			</dependency>

			<dependency>
				<groupId>io.projectreactor</groupId>
				<artifactId>reactor-core</artifactId>
				<version>${reactor-core.version}</version>
				<scope>compile</scope>
			</dependency>


			<!-- Cassandra driver and dependencies -->
			<dependency>
				<groupId>com.datastax.cassandra</groupId>
				<artifactId>cassandra-driver-core</artifactId>
				<version>${cassandra-driver-core.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>log4j</artifactId>
						<groupId>log4j</groupId>
					</exclusion>
					<exclusion>
						<groupId>com.google.guava</groupId>
						<artifactId>guava</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${io.netty}</version>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-handler</artifactId>
				<version>${io.netty}</version>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-handler-proxy</artifactId>
				<version>${io.netty}</version>
			</dependency>
			
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-codec-http2</artifactId>
				<version>${io.netty}</version>
			</dependency>
			
			<dependency>
			    <groupId>io.netty</groupId>
			    <artifactId>netty-tcnative-boringssl-static</artifactId>
			    <version>2.0.8.Final</version>
			    <scope>runtime</scope>
			</dependency>
			
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microsoft.sqlserver</groupId>
				<artifactId>mssql-jdbc</artifactId>
				<version>6.4.0.jre8</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- we really do not need javadocs for the server, there are no Java 
				APIs exposed -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>none</phase>
					</execution>
				</executions>
				<configuration>
					<!-- Exclude copied resource from spring + jaxrs resources -->
					<excludePackageNames>org.jboss.aerogear.unifiedpush.spring.utils:org.jboss.aerogear.unifiedpush.rest</excludePackageNames>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${wildfly-maven-plugin.version}</version>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpapplicationxml>true</wtpapplicationxml>
					<wtpversion>2.0</wtpversion>
					<manifest>${basedir}/src/main/resources/META-INF/MANIFEST.MF</manifest>
					<downloadSources>true</downloadSources>
					<ajdtVersion>none</ajdtVersion>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.basepom.maven</groupId>
				<artifactId>duplicate-finder-maven-plugin</artifactId>
				<version>1.2.1</version>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Override the actual checkstyle version to support Java 1.8 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${version.checkstyle.plugin}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>6.18</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<properties>
		<java.version>1.8</java.version>

		<!-- Override Areogear BOM -->
		<resteasy.version>3.6.1.Final</resteasy.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Options to override the compiler arguments directly on the compiler 
			arument line to separate between what the IDE understands as the source level 
			and what the Maven compiler actually use. -->
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<wildfly-maven-plugin.version>1.2.0.Final</wildfly-maven-plugin.version>

		<aerogear.bom.version>1.1.2</aerogear.bom.version>
		<admin-ui.version>1.2.6</admin-ui.version>

		<!-- Override versions of AeroGear BOMs -->
		<junit.version>4.12</junit.version>
		<keycloak.version>4.8.3.Final</keycloak.version>
		<hibernate.version>5.3.1.Final</hibernate.version>
		<hibernate-validator.version>6.0.13.Final</hibernate-validator.version>
		<version.javax.validation>2.0.1.Final</version.javax.validation>

		<gcm-server.version>1.0.0</gcm-server.version>
		<pushy.version>0.10.2</pushy.version>
		<slfj4.version>1.7.21</slfj4.version>

		<!-- Code coverage -->
		<org.jacoco.ant.version>0.7.9</org.jacoco.ant.version>
		<org.jacoco.agent.version>0.7.9</org.jacoco.agent.version>
		<org.jacoco.jacoco-maven-plugin.version>0.7.9</org.jacoco.jacoco-maven-plugin.version>
		<ant.contrib.version>20020829</ant.contrib.version>
		<aerogear.crypto.version>0.1.5</aerogear.crypto.version>

		<postgresql.version>42.1.4</postgresql.version>
		<fasterxml.version>2.9.5</fasterxml.version>
		<wildfly.version>14.0.1.Final</wildfly.version>
		<org.infinispan>9.3.1.Final</org.infinispan>
		<springframework.version>5.0.2.RELEASE</springframework.version>
		<springsecurity.version>5.0.0.RELEASE</springsecurity.version>
		<reactor-core.version>3.1.0.RELEASE</reactor-core.version>

		<!-- Cassandra related properties -->
		<failsafe.version>2.19.1</failsafe.version>
		<cassandra.version>3.11.1</cassandra.version>
		<cassandra-driver-core.version>3.3.2</cassandra-driver-core.version>
		<cassandra-data.version>2.0.2.RELEASE</cassandra-data.version>
		<spring-data.version>2.0.2.RELEASE</spring-data.version>
		<io.netty>4.1.25.Final</io.netty>

		<ups.ddl_value>validate</ups.ddl_value>
	</properties>

	<profiles>
		<profile>
			<id>test</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<dependencyManagement>
				<dependencies>
					<!-- AeroGear Test Dependencies BOM Imports -->
					<dependency>
						<groupId>org.jboss.aerogear</groupId>
						<artifactId>aerogear-test-bom</artifactId>
						<version>${aerogear.bom.version}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>

					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
						<version>1.6.1</version>
						<scope>test</scope>
					</dependency>

					<!-- Hibernate Validator also requires an implementation of the Unified 
						Expression Language (JSR 341). http://hibernate.org/validator/documentation/getting-started/ -->
					<dependency>
						<groupId>javax.el</groupId>
						<artifactId>javax.el-api</artifactId>
						<version>3.0.0</version>
						<scope>test</scope>
					</dependency>

					<dependency>
						<groupId>org.glassfish.web</groupId>
						<artifactId>javax.el</artifactId>
						<version>2.2.6</version>
						<scope>test</scope>
					</dependency>

					<!-- Cassandra related -->
					<dependency>
						<groupId>org.apache.cassandra</groupId>
						<artifactId>cassandra-all</artifactId>
						<version>${cassandra.version}</version>
						<scope>test</scope>
						<exclusions>
							<exclusion>
								<artifactId>slf4j-log4j12</artifactId>
								<groupId>org.slf4j</groupId>
							</exclusion>
						</exclusions>
					</dependency>

					<dependency>
						<groupId>org.hectorclient</groupId>
						<artifactId>hector-core</artifactId>
						<version>2.0-0</version>
						<scope>test</scope>
						<exclusions>
							<exclusion>
								<groupId>commons-lang</groupId>
								<artifactId>commons-lang</artifactId>
							</exclusion>
						</exclusions>
					</dependency>

					<dependency>
						<groupId>org.cassandraunit</groupId>
						<artifactId>cassandra-unit-spring</artifactId>
						<version>3.5.0.1</version>
						<scope>test</scope>
					</dependency>

					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring-test</artifactId>
						<version>${springframework.version}</version>
						<scope>test</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>

			<dependencies>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
					<version>1.1.3</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
					<version>1.1.3</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<!-- Builds the distribution. Usage: - mvn clean install -Pdist,test Preparing/Performing 
			release, include as well: - mvn release:GOAL -Pdist,test -->
		<profile>
			<id>dist</id>
			<modules>
				<module>dist</module>
			</modules>
			<properties>
				<ups.ddl_value>validate</ups.ddl_value>
			</properties>
		</profile>

		<profile>
			<id>code-coverage</id>
			<properties>
				<unifiedpush-parent.build>${user.dir}/target</unifiedpush-parent.build>
				<jacoco.prep>${unifiedpush-parent.build}/jacoco/prep</jacoco.prep>
				<jacoco.prep.classes>${jacoco.prep}/classes</jacoco.prep.classes>
				<jacoco.prep.sources>${jacoco.prep}/sources</jacoco.prep.sources>
				<jacoco.report.file>${jacoco.prep}/jacoco.exec</jacoco.report.file>
				<jacoco.report.output>${unifiedpush-parent.build}/jacoco/report</jacoco.report.output>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${org.jacoco.jacoco-maven-plugin.version}</version>
						<configuration>
							<destFile>${jacoco.report.file}</destFile>
							<append>true</append>
						</configuration>
						<executions>
							<execution>
								<id>default-prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<dependencies>
							<dependency>
								<groupId>org.jacoco</groupId>
								<artifactId>org.jacoco.ant</artifactId>
								<version>${org.jacoco.ant.version}</version>
							</dependency>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>${ant.contrib.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>jacoco-report</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef name="jacoco-report"
											classname="org.jacoco.ant.ReportTask"
											classpathref="maven.plugin.classpath" />
										<taskdef classpathref="maven.runtime.classpath"
											resource="net/sf/antcontrib/antcontrib.properties" />
										<available file="${project.build.sourceDirectory}"
											type="dir" property="source.dir.exists" />
										<available file="${jacoco.report.file}"
											property="exec.file.exists" />
										<if>
											<equals arg1="${source.dir.exists}" arg2="true" />
											<then>
												<copy todir="${jacoco.prep.sources}">
													<fileset dir="${project.build.sourceDirectory}" />
												</copy>
												<copy todir="${jacoco.prep.classes}">
													<fileset dir="${project.build.directory}/classes" />
												</copy>
												<if>
													<equals arg1="${exec.file.exists}" arg2="true" />
													<then>
														<trycatch reference="report_exception">
															<try>
																<jacoco-report>
																	<executiondata>
																		<file file="${jacoco.report.file}" />
																	</executiondata>
																	<structure
																		name="AeroGear UnifiedPush Server Unit Tests">
																		<classfiles>
																			<fileset dir="${jacoco.prep.classes}" />
																		</classfiles>
																		<sourcefiles
																			encoding="${project.build.sourceEncoding}">
																			<fileset dir="${jacoco.prep.sources}" />
																		</sourcefiles>
																	</structure>
																	<html destdir="${jacoco.report.output}" />
																</jacoco-report>
															</try>
															<catch>
																<property name="exception"
																	refid="report_exception" />
																<property name="message"
																	value="Error while generating jacoco report: ${exception}" />
																<echo message="${message}" />
															</catch>
														</trycatch>
													</then>
													<else>
														<echo
															message=".exec file is missing! Expected at: ${jacoco.report.file}!" />
													</else>
												</if>
											</then>
											<else>
												<echo
													message="Source directory ${project.build.sourceDirectory} doesn't exist!" />
											</else>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>spring-libs-milestone</id>
			<name>Spring Snapshot Repository</name>
			<url>http://repo.spring.io/libs-milestone-local</url>
		</repository>
	</repositories>
</project>
